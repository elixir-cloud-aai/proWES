name: proWES CI

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  code-style:
    name: Run linting
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.10
      - name: Install requirements
        run: |
          pip install -e .
          pip install -r requirements_dev.txt
      - name: Lint with flake8
        run: flake8

  build-publish:
    runs-on: ubuntu-latest
    needs: [code-style]

    steps:
      - name: Check out repository
        uses: actions/checkout@v2
      - name: Build & publish image
        env:
          DOCKERHUB_ORG: ${{ secrets.DOCKERHUB_ORG }}
          DOCKERHUB_LOGIN: ${{ secrets.DOCKERHUB_LOGIN }}
          DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}
          REPO_NAME: ${{ github.event.repository.name }}
        run: |
          set -x
          export ON_DEFAULT=FALSE
          export DEFAULT_BRANCH=${{ github.event.repository.default_branch }}
          if [[ "${GITHUB_EVENT_NAME}" == "push" ]]; then
            export BRANCH_NAME=${GITHUB_REF##*/}
          elif [[ "${GITHUB_EVENT_NAME}" == "pull_request" ]]; then
            export BRANCH_NAME=${GITHUB_HEAD_REF##*/}
          else
            export BRANCH_NAME=INVALID_EVENT_BRANCH_UNKNOWN
          fi
          if [[ "$BRANCH_NAME" == "$DEFAULT_BRANCH" ]]; then
              export TAG=$(date '+%Y%m%d')
              export ON_DEFAULT=TRUE
          else
              export TAG=$BRANCH_NAME
          fi
          echo "TAG: ${TAG}"
          docker build \
              -t ${DOCKERHUB_ORG}/${REPO_NAME}:${TAG} \
              -f docker/Dockerfile \
              .
          echo $DOCKERHUB_TOKEN | \
              docker login -u $DOCKERHUB_LOGIN --password-stdin
          docker push ${DOCKERHUB_ORG}/${REPO_NAME}:${TAG}
          # if on default branch, we also want to update the "latest" tag
          if [[ "$ON_DEFAULT" == "TRUE" ]]; then
              docker tag \
                  ${DOCKERHUB_ORG}/${REPO_NAME}:${TAG} \
                  ${DOCKERHUB_ORG}/${REPO_NAME}:latest
              docker push ${DOCKERHUB_ORG}/${REPO_NAME}:latest
          fi
          rm ${HOME}/.docker/config.json
