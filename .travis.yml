os:
- linux
dist: bionic
language: minimal

services:
- docker

if: type != pull_request  # do not build anything for PRs

# set global variables
env:
  global:
    - TEST_ENDPOINT="http://localhost:7676/ga4gh/wes/v1/runs"

# set conditional variables
before_install:
  - |
    if [ "$TRAVIS_BRANCH" = "dev" ]; then
        export TAG="latest"
    else
        export TAG=${TRAVIS_BRANCH//_/-}
    fi

stages:
  - name: build
  - name: deploy

jobs:
  include:
    - stage: build
      name: Build app image and push to Docker registry
      script:
        - docker build -t "$DOCKER_REPO_NAME":"$TAG" .
        - echo "$DOCKER_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker push "$DOCKER_REPO_NAME":"$TAG"
        - rm ${HOME}/.docker/config.json  # delete token
    - stage: build
      name: Build, deploy and test application locally with docker-compose
      env:
        - DATA_DIR="${HOME}/data/pro_wes"
      script:
        - mkdir -p ${DATA_DIR}/{db,specs}  # create data directories
        - docker-compose up -d --build
        - sleep 30  # wait for services to start up
        - |
          test $(\
              curl \
                  -sL \
                  - o /dev/null \
                  -w '%{http_code}' \
                  -X GET \
                  --header 'Accept: application/json'
                  "$TEST_ENDPOINT" \
          ) == '200'
        - docker-compose down

#    - stage: ci-deploy
#      name: Deploy on Kubernetes, test endpoint and delete
#      script:
#      # install kubectl
#      - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.3/bin/linux/amd64/kubectl
#      - chmod +x kubectl
#      - sudo mv kubectl /usr/local/bin/
#      # install helm
#      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
#      - chmod 700 get_helm.sh
#      - ./get_helm.sh
#      # log in
#      - kubectl config set-credentials prowes-ci-user --token=$K8S_TOKEN
#      - kubectl config set-cluster ci-server --server=$K8S_CLUSTER
#      - kubectl config set-context ci-context --user=prowes-ci-user --namespace=$K8S_NAMESPACE --cluster=ci-server
#      - kubectl config use-context ci-context
#      # deploy
#      - SUFFIX=${TRAVIS_BRANCH//_/-}
#      - |
#        helm install prowes-$SUFFIX deployment --wait --timeout 120s \
#          --set flower.appName=flower-$SUFFIX \
#          --set prowes.appName=prowes-$SUFFIX \
#          --set prowes.image="$DOCKER_REPO_NAME":"$SUFFIX" \
#          --set celeryWorker.appName=celery-worker-$SUFFIX \
#          --set celeryWorker.image="$DOCKER_REPO_NAME":"$SUFFIX" \
#          --set rabbitmq.appName=rabbitmq-$SUFFIX \
#          --set mongodb.appName=mongodb-$SUFFIX \
#          --debug
#      # test
#      - endpoint=$(kubectl get route -l app=prowes-$SUFFIX -o=jsonpath='{.items[0].spec.host}')
#      - echo $endpoint
#      - 'test $(curl -sL -w "%{http_code}" -X GET --header "Accept: application/json" "https://$endpoint/ga4gh/wes/v1/runs" -o /dev/null) == "200"'
#      - helm delete prowes-$SUFFIX
#    - stage: ci-clean
#      name: Delete the deployed CI environment from Kubernetes
#      script:
#      # install kubectl
#      - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.3/bin/linux/amd64/kubectl
#      - chmod +x kubectl
#      - sudo mv kubectl /usr/local/bin/
#      # install helm
#      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
#      - chmod 700 get_helm.sh
#      - ./get_helm.sh
#      # log in
#      - kubectl config set-credentials prowes-ci-user --token=$K8S_TOKEN
#      - kubectl config set-cluster ci-server --server=$K8S_CLUSTER
#      - kubectl config set-context ci-context --user=prowes-ci-user --namespace=$K8S_NAMESPACE --cluster=ci-server
#      - kubectl config use-context ci-context
#      # deploy
#      - SUFFIX=${TRAVIS_BRANCH//_/-}
#    - stage: prod-deploy
#      name: Deploy prod app on Kubernetes
#      script:
#      # install kubectl
#      - curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.3/bin/linux/amd64/kubectl
#      - chmod +x kubectl
#      - sudo mv kubectl /usr/local/bin/
#      # install helm
#      - curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 > get_helm.sh
#      - chmod 700 get_helm.sh
#      - ./get_helm.sh
#      # log in
#      - kubectl config set-credentials prowes-user --token=$K8S_PROD_TOKEN
#      - kubectl config set-cluster server --server=$K8S_CLUSTER
#      - kubectl config set-context context --user=prowes-user --namespace=$K8S_PROD_NAMESPACE --cluster=server
#      - kubectl config use-context context
#      # deploy
#      - |
#        helm upgrade prowes deployment --wait --timeout 120s \
#          --set flower.appName=flower \
#          --set prowes.appName=prowes \
#          --set prowes.image="$DOCKER_REPO_NAME":latest \
#          --set celeryWorker.appName=celery-worker \
#          --set celeryWorker.image="$DOCKER_REPO_NAME":latest \
#          --set rabbitmq.appName=rabbitmq \
#          --set mongodb.appName=mongodb
#      # test
#      - endpoint=$(kubectl get route -l app=prowes -o=jsonpath='{.items[0].spec.host}')
#      - echo $endpoint
#      - "test $(curl -sL -w '%{http_code}' -X GET --header 'Accept: application/json' 'http://$endpoint/ga4gh/wes/v1/runs' -o /dev/null) == '200'"
#