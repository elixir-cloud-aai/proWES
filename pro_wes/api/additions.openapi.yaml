openapi: 3.0.2
info:
  title: "proWES"
  description: |
    Gateway GA4GH Workflow Execution Service (WES) API implementation; forwards
    incoming run requests to known WES instances and harmonizes the experience
    More information on [GitHub](https://github.com/elixir-cloud-aai/proWES).
  version: 1.0.0
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0"
  contact:
    name: "ELIXIR Cloud & AAI"
    email: "alexander.kanitz@alumni.ethz.ch"
servers:
  - url: /ga4gh/wes/v1
paths:
  /service-info:
    post:
      summary: Register service info.
      description: Create or update the service info.
      operationId: PostServiceInfo
      tags:
        - pro-wes
      requestBody:
        description: Service info to add.
        required: true
        content:
          application/json:
            schema:
              x-body-name: service_info
              $ref: "#/components/schemas/ServiceInfoRegister"
      responses:
        "201":
          description: The service info was successfully created.
        400:
          description: The request is malformed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        401:
          description: The request is unauthorized.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        403:
          description: The requester is not authorized to perform this action.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        500:
          description: An unexpected error occurred.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    # `Service` and `ServiceType` schemas copied over from Service Info API specs
    # workaround for Connexion problem preventing the resolving of nested references
    # in `ServiceInfoRegister` in `POST request
    Service:
      description: "GA4GH service"
      type: object
      required:
        - id
        - name
        - type
        - organization
        - version
      properties:
        id:
          type: string
          description: "Unique ID of this service. Reverse domain name notation is recommended, though not required. The identifier should attempt to be globally unique so it can be used in downstream aggregator services e.g. Service Registry."
          example: "org.ga4gh.myservice"
        name:
          type: string
          description: "Name of this service. Should be human readable."
          example: "My project"
        type:
          $ref: "#/components/schemas/ServiceType"
        description:
          type: string
          description: "Description of the service. Should be human readable and provide information about the service."
          example: "This service provides..."
        organization:
          type: object
          description: "Organization providing the service"
          required:
            - name
            - url
          properties:
            name:
              type: string
              description: "Name of the organization responsible for the service"
              example: "My organization"
            url:
              type: string
              format: uri
              description: "URL of the website of the organization (RFC 3986 format)"
              example: "https://example.com"
        contactUrl:
          type: string
          format: uri
          description: "URL of the contact for the provider of this service, e.g. a link to a contact form (RFC 3986 format), or an email (RFC 2368 format)."
          example: "mailto:support@example.com"
        documentationUrl:
          type: string
          format: uri
          description: "URL of the documentation of this service (RFC 3986 format). This should help someone learn how to use your service, including any specifics required to access data, e.g. authentication."
          example: "https://docs.myservice.example.com"
        createdAt:
          type: string
          format: date-time
          description: "Timestamp describing when the service was first deployed and available (RFC 3339 format)"
          example: "2019-06-04T12:58:19Z"
        updatedAt:
          type: string
          format: date-time
          description: "Timestamp describing when the service was last updated (RFC 3339 format)"
          example: "2019-06-04T12:58:19Z"
        environment:
          type: string
          description: "Environment the service is running in. Use this to distinguish between production, development and testing/staging deployments. Suggested values are prod, test, dev, staging. However this is advised and not enforced."
          example: "test"
        version:
          type: string
          description: "Version of the service being described. Semantic versioning is recommended, but other identifiers, such as dates or commit hashes, are also allowed. The version should be changed whenever the service is updated."
          example: "1.0.0"
    ServiceType:
      description: "Type of a GA4GH service"
      type: object
      required:
        - group
        - artifact
        - version
      properties:
        group:
          type: string
          description: "Namespace in reverse domain name format. Use `org.ga4gh` for implementations compliant with official GA4GH specifications. For services with custom APIs not standardized by GA4GH, or implementations diverging from official GA4GH specifications, use a different namespace (e.g. your organization's reverse domain name)."
          example: "org.ga4gh"
        artifact:
          type: string
          description: "Name of the API or GA4GH specification implemented. Official GA4GH types should be assigned as part of standards approval process. Custom artifacts are supported."
          example: "beacon"
        version:
          type: string
          description: "Version of the API or specification. GA4GH specifications use semantic versioning."
          example: "1.0.0"
    ServiceInfoRegister:
      title: ServiceInfoRegister
      allOf:
        #        - $ref: "#/components/schemas/Service"
        - type: object
          properties:
            workflow_type_versions:
              type: object
              additionalProperties:
                $ref: "#/components/schemas/WorkflowTypeVersion"
            supported_wes_versions:
              type: array
              items:
                type: string
              description: The version(s) of the WES schema supported by this service
            supported_filesystem_protocols:
              type: array
              items:
                type: string
              description: The filesystem protocols supported by this service, currently these may include common protocols using the terms 'http', 'https', 'sftp', 's3', 'gs', 'file', or 'synapse', but others  are possible and the terms beyond these core protocols are currently not fixed.   This section reports those protocols (either common or not) supported by this WES service.
            workflow_engine_versions:
              type: object
              additionalProperties:
                type: string
            default_workflow_engine_parameters:
              type: array
              items:
                $ref: "#/components/schemas/DefaultWorkflowEngineParameter"
              description: Each workflow engine can present additional parameters that can be sent to the workflow engine. This message will list the default values, and their types for each workflow engine.
            auth_instructions_url:
              type: string
              description: A web page URL with human-readable instructions on how to get an authorization token for use with a specific WES endpoint.
            tags:
              type: object
              additionalProperties:
                type: string
                description: A message containing useful information about the running service, including supported versions and default settings.
          required:
            - workflow_type_versions
            - supported_wes_versions
            - supported_filesystem_protocols
            - workflow_engine_versions
            - default_workflow_engine_parameters
            - auth_instructions_url
            - tags
